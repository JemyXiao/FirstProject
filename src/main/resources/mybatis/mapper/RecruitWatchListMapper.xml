<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.mapper.RecruitWatchListMapper">
    <resultMap id="BaseResultMap" type="com.recruit.entity.RecruitWatchList">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="watch_mater_id" property="watchMaterId" jdbcType="BIGINT"/>
        <result column="emp_master_id" property="empMasterId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, watch_mater_id, emp_master_id, status, created_at, updated_at
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recruit.entity.RecruitWatchListExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_recruit_watch_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByWatchList" parameterType="com.recruit.entity.RecruitWatchList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_recruit_watch_list
        WHERE emp_master_id = #{empMasterId}
        AND watch_mater_id = #{watchMaterId}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_recruit_watch_list
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_recruit_watch_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.recruit.entity.RecruitWatchListExample">
        delete from t_recruit_watch_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteByWatchList" parameterType="com.recruit.entity.RecruitWatchList">
     delete from t_recruit_watch_list
     WHERE emp_master_id = #{empMasterId}
          AND watch_mater_id = #{watchMaterId}
  </delete>
    <insert id="insert" parameterType="com.recruit.entity.RecruitWatchList" useGeneratedKeys="true"
            keyProperty="id">
    insert into t_recruit_watch_list (id, watch_mater_id, emp_master_id, 
      status
      )
    values (#{id,jdbcType=BIGINT}, #{watchMaterId,jdbcType=BIGINT}, #{empMasterId,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.recruit.entity.RecruitWatchList">
        insert into t_recruit_watch_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="watchMaterId != null">
                watch_mater_id,
            </if>
            <if test="empMasterId != null">
                emp_master_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="watchMaterId != null">
                #{watchMaterId,jdbcType=BIGINT},
            </if>
            <if test="empMasterId != null">
                #{empMasterId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.recruit.entity.RecruitWatchListExample"
            resultType="java.lang.Integer">
        select count(*) from t_recruit_watch_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_recruit_watch_list
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.watchMaterId != null">
                watch_mater_id = #{record.watchMaterId,jdbcType=BIGINT},
            </if>
            <if test="record.empMasterId != null">
                emp_master_id = #{record.empMasterId,jdbcType=BIGINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_recruit_watch_list
        set id = #{record.id,jdbcType=BIGINT},
        watch_mater_id = #{record.watchMaterId,jdbcType=BIGINT},
        emp_master_id = #{record.empMasterId,jdbcType=BIGINT},
        status = #{record.status,jdbcType=VARCHAR},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.recruit.entity.RecruitWatchList">
        update t_recruit_watch_list
        <set>
            <if test="watchMaterId != null">
                watch_mater_id = #{watchMaterId,jdbcType=BIGINT},
            </if>
            <if test="empMasterId != null">
                emp_master_id = #{empMasterId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.recruit.entity.RecruitWatchList">
    update t_recruit_watch_list
    set watch_mater_id = #{watchMaterId,jdbcType=BIGINT},
      emp_master_id = #{empMasterId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>