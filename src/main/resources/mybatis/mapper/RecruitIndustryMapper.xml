<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.mapper.RecruitIndustryMapper">
    <resultMap id="BaseResultMap" type="com.recruit.entity.RecruitIndustry">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="industry_code" property="industryCode" jdbcType="BIGINT"/>
        <result column="industry_name" property="industryName" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, industry_code, industry_name, created_at, updated_at
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recruit.entity.RecruitIndustryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_recruit_industry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        WHERE status = 0
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_recruit_industry
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectIndustry" parameterType="string" resultType="com.recruit.entity.RecruitIndustry">
        select
        <include refid="Base_Column_List"/>
        from t_recruit_industry
        where industry_name = #{industryName}
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    UPDATE  t_recruit_industry
    set status = 1
    where id = #{id,jdbcType=BIGINT}
  </update>

    <delete id="deleteByExample" parameterType="com.recruit.entity.RecruitIndustryExample">
        delete from t_recruit_industry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
<insert id="insert" parameterType="com.recruit.entity.RecruitIndustry">
    insert into t_recruit_industry (industry_code, industry_name)
    values (#{industryCode,jdbcType=BIGINT}, #{industryName,jdbcType=VARCHAR})
</insert>

    <select id="selectMaxCode" resultType="Long">
        SELECT max(industry_code)+1
        FROM t_recruit_industry
    </select>
    <select id="getIndustry" parameterType="string" resultType="com.recruit.entity.RecruitIndustry">
        SELECT
        <include refid="Base_Column_List"/>
        from t_recruit_industry
        WHERE industry_name = #{industryName}
    </select>
    <insert id="insertSelective" parameterType="com.recruit.entity.RecruitIndustry">
        insert into t_recruit_industry
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="industryCode != null">
                industry_code,
            </if>
            <if test="industryName != null">
                industry_name,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="industryCode != null">
                #{industryCode,jdbcType=BIGINT},
            </if>
            <if test="industryName != null">
                #{industryName,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.recruit.entity.RecruitIndustryExample"
            resultType="java.lang.Integer">
        select count(*) from t_recruit_industry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_recruit_industry
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.industryCode != null">
                industry_code = #{record.industryCode,jdbcType=BIGINT},
            </if>
            <if test="record.industryName != null">
                industry_name = #{record.industryName,jdbcType=VARCHAR},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_recruit_industry
        set id = #{record.id,jdbcType=BIGINT},
        industry_code = #{record.industryCode,jdbcType=BIGINT},
        industry_name = #{record.industryName,jdbcType=VARCHAR},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.recruit.entity.RecruitIndustry">
        update t_recruit_industry
        <set>
            <if test="industryCode != null">
                industry_code = #{industryCode,jdbcType=BIGINT},
            </if>
            <if test="industryName != null">
                industry_name = #{industryName,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.recruit.entity.RecruitIndustry">
    update t_recruit_industry
    set industry_code = #{industryCode,jdbcType=BIGINT},
      industry_name = #{industryName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>